{"version":3,"file":"index.js","mappings":"mBAAA,MAAM,EAA+BA,OAAW,GAAoB,iBCA9D,EAA+BA,OAAc,MCA7C,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAgB,aCAnDC,EAAsB,SCA7B,EAA+BD,OAAW,GAAc,WCKjDE,EAAyBA,KACrC,MAAMC,GAAmBC,EAAAA,EAAAA,YAAY,cAAe,MAEpD,IAAOD,EACN,MAAM,IAAIE,MAAO,+CAGlB,OAAOF,CAAgB,E,QCKxB,MAAMG,EAAUA,KACRC,EAAAA,EAAAA,eAAA,YAAOC,EAAAA,EAAAA,gBAAgBN,KAA0BO,cAAeC,EAAAA,EAAAA,IAAG,mEAAoE,YAGzIC,EAAmD,QAAtCC,EAAGV,KAA0BW,iBAAS,IAAAD,EAAAA,EAAI,KAiC7D,EA9BsB,CACrBE,KAAMb,EACNc,OACCR,EAAAA,EAAAA,eAAA,OAAKS,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOC,OAAQ,MAAOC,WAAY,YAC/Eb,EAAAA,EAAAA,eAAA,OACAc,IAAO,GAAEV,mBACTW,KAAMd,EAAAA,EAAAA,gBACLN,KAA0BqB,QAASb,EAAAA,EAAAA,IAAI,SAAU,cAGlDH,EAAAA,EAAAA,eAAA,UAAGA,EAAAA,EAAAA,eAAA,UAAI,YAGTiB,uBAAuBd,EAAAA,EAAAA,IACtB,oBACA,UAEDe,WAAWjB,EAAAA,EAAAA,gBACVN,KAA0BqB,QAC1Bb,EAAAA,EAAAA,IAAI,qBAAsB,WAE3BgB,eAAgBA,KAAM,EACtBC,SAASpB,EAAAA,EAAAA,eAACD,EAAO,MACjBsB,MAAMrB,EAAAA,EAAAA,eAACD,EAAO,MACduB,gBAAiB5B,EACjB6B,SAAU,CACTC,SAA6C,QAArCC,EAAG9B,KAA0B4B,gBAAQ,IAAAE,EAAAA,EAAI,MCnCnDC,EAAAA,EAAAA,uBAAuBC,E","sources":["webpack://budpay/external window [\"wc\",\"wcBlocksRegistry\"]","webpack://budpay/external window \"React\"","webpack://budpay/external window [\"wp\",\"i18n\"]","webpack://budpay/external window [\"wp\",\"htmlEntities\"]","webpack://budpay/./assets/blocks/payment-method/constants.js","webpack://budpay/external window [\"wc\",\"wcSettings\"]","webpack://budpay/./assets/blocks/utils.js","webpack://budpay/./assets/blocks/payment-method/index.js","webpack://budpay/./assets/blocks/index.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wc\"][\"wcBlocksRegistry\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"htmlEntities\"];","export const PAYMENT_METHOD_NAME = 'budpay';\nexport const PAYMENT_METHOD_VERSION = '1.0.0';","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wc\"][\"wcSettings\"];","/**\n * WooCommerce dependencies\n */\nimport { getSetting, WC_ } from '@woocommerce/settings';\n\nexport const getBlocksConfiguration = () => {\n\tconst budpayServerData = getSetting( 'budpay_data', null );\n\n\tif ( ! budpayServerData ) {\n\t\tthrow new Error( 'Budpay initialization data is not available' );\n\t}\n\n\treturn budpayServerData;\n};\n\n/**\n * Creates a payment request using cart data from WooCommerce.\n *\n * @param {Object} Budpay - The Budpay JS object.\n * @param {Object} cart - The cart data response from the store's AJAX API.\n *\n * @return {Object} A Budpay payment request.\n */\nexport const createPaymentRequestUsingCart = ( budpay, cart ) => {\n\tconst options = {\n\t\ttotal: cart.order_data.total,\n\t\tcurrency: cart.order_data.currency,\n\t\tcountry: cart.order_data.country_code,\n\t\trequestPayerName: true,\n\t\trequestPayerEmail: true,\n\t\trequestPayerPhone: getBlocksConfiguration()?.checkout\n\t\t\t?.needs_payer_phone,\n\t\trequestShipping: !!cart.shipping_required,\n\t\tdisplayItems: cart.order_data.displayItems,\n\t};\n\n\tif ( options.country === 'PR' ) {\n\t\toptions.country = 'US';\n\t}\n\n\treturn budpay.paymentRequest( options );\n};\n\n/**\n * Updates the given PaymentRequest using the data in the cart object.\n *\n * @param {Object} paymentRequest  The payment request object.\n * @param {Object} cart  The cart data response from the store's AJAX API.\n */\nexport const updatePaymentRequestUsingCart = ( paymentRequest, cart ) => {\n\tconst options = {\n\t\ttotal: cart.order_data.total,\n\t\tcurrency: cart.order_data.currency,\n\t\tdisplayItems: cart.order_data.displayItems,\n\t};\n\n\tpaymentRequest.update( options );\n};\n\n/**\n * Returns the Budpay public key\n *\n * @throws Error\n * @return {string} The public api key for the Budpay payment method.\n */\nexport const getPublicKey = () => {\n\tconst public_key = getBlocksConfiguration()?.public_key;\n\tif ( ! public_key ) {\n\t\tthrow new Error(\n\t\t\t'There is no public key available for Budpay. Make sure it is available on the wc.budpay_data.public_key property.'\n\t\t);\n\t}\n\treturn public_key;\n};\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport { PAYMENT_METHOD_NAME } from './constants';\nimport {\n\tgetBlocksConfiguration,\n} from 'wcbudpay/blocks/utils';\n\n/**\n * Content component\n */\nconst Content = () => {\n\treturn <div>{ decodeEntities( getBlocksConfiguration()?.description || __('You may be redirected to a secure page to complete your payment.', 'budpay') ) }</div>;\n};\n\nconst BUDPAY_ASSETS = getBlocksConfiguration()?.asset_url ?? null;\n\n\nconst paymentMethod = {\n\tname: PAYMENT_METHOD_NAME,\n\tlabel: (\n\t\t<div style={{ display: 'flex', flexDirection: 'row', rowGap: '0em', alignItems: 'center'}}>\n\t\t\t<img\n\t\t\tsrc={ `${BUDPAY_ASSETS}/img/budpay.png` }\n\t\t\talt={ decodeEntities(\n\t\t\t\tgetBlocksConfiguration()?.title || __( 'Budpay', 'budpay' )\n\t\t\t) }\n\t\t\t/>\n\t\t\t<b><h4>BudPay</h4></b>\n\t\t</div>\n\t),\n\tplaceOrderButtonLabel: __(\n\t\t'Proceed to Budpay',\n\t\t'budpay'\n\t),\n\tariaLabel: decodeEntities(\n\t\tgetBlocksConfiguration()?.title ||\n\t\t__( 'Payment via Budpay', 'budpay' )\n\t),\n\tcanMakePayment: () => true,\n\tcontent: <Content />,\n\tedit: <Content />,\n\tpaymentMethodId: PAYMENT_METHOD_NAME,\n\tsupports: {\n\t\tfeatures:  getBlocksConfiguration()?.supports ?? [],\n\t},\n}\n\nexport default paymentMethod;","/**\n * WooCommerce dependencies\n */\nimport {\n\tregisterPaymentMethod,\n} from '@woocommerce/blocks-registry';\n\n/**\n * Internal dependencies\n *\n * reference: https://github.com/woocommerce/woocommerce-blocks/blob/trunk/docs/third-party-developers/extensibility/checkout-payment-methods/payment-method-integration.md\n */\nimport paymentMethod from 'wcbudpay/blocks/payment-method';\n\n// Register Budpay Payment Request.\nregisterPaymentMethod( paymentMethod );\n\n// TODO: implement a Direct Card payment metho"],"names":["window","PAYMENT_METHOD_NAME","getBlocksConfiguration","budpayServerData","getSetting","Error","Content","createElement","decodeEntities","description","__","BUDPAY_ASSETS","_getBlocksConfigurati","asset_url","name","label","style","display","flexDirection","rowGap","alignItems","src","alt","title","placeOrderButtonLabel","ariaLabel","canMakePayment","content","edit","paymentMethodId","supports","features","_getBlocksConfigurati2","registerPaymentMethod","paymentMethod"],"sourceRoot":""}